#!/usr/bin/env zsh

# mlc - Media Length Cache
# store length with timestamps in a cache
#
# functions that end in _ are dangerous and
# intended for internal use only
#
# normally, the only thing you need to do is 
# import,
#  . mlc
# then run,
#  mlcLookup $path
# which yields the duration in seconds of a
# media file.
# 
# media files can be in any format supported
# by mplayer; any file that mplayer cannot 
# determine the length of will appear as zero

MLC_POLL_DUR="0.1"
[ -e ~/.mlc ] || touch ~/.mlc

function mlcGetLength() {
	(mplayer -vo null -ao null -identify -frames 0 "$@" | (grep '^ID_LENGTH=[0-9\.]*$' || echo 0) | sed 's/^ID_LENGTH*=//' )2>/dev/null
}

function mlcPath2Key_() {
	path="$@"
	echo $path | md5sum | cut -d ' ' -f 1
}

function mlcLockEngage_() {
	while [ -e ~/.mlc.lock ] ; do
		sleep $MLC_POLL_DUR
	done
	touch ~/.mlc.lock
}

function mlcLockDisengage_() {
	rm ~/.mlc.lock
}

function mlcReplaceDB_() {
	cat > ~/.mlc.bak
	echo "replace db diff" > /dev/stderr
	diff ~/.mlc{,.bak} > /dev/stderr
	mv ~/.mlc{.bak,}
}

function mlcEvict_() {
	echo "mlcEvict_ $1 $2" > /dev/stderr
	mlcLockEngage_
	grep -v "^$2 " ~/.mlc | mlcReplaceDB_
	mlcLockDisengage_
}

function mlcEvict() {
	path="$@"
	mlcEvict_ "$path" "$(mlcPath2Pat $path)"	
}

function mlcLookupCache_() {
	echo "mlcLookupCache_ $1" > /dev/stderr
	grep "^$1 " ~/.mlc
}

function mlcEnter_() {
	path="$1"
	pat="$2"
	echo "mlcEnter_ $path $pat" > /dev/stderr
	mlcLockEngage_
	(
		echo "$pat $(stat -c '%Y' $path) $(mlcGetLength $path)"
		cat ~/.mlc
	) | tee /dev/stderr | mlcReplaceDB_
	mlcLockDisengage_ 
}

function mlcLookup_() {
	path="$1"
	pat="$2"
	echo "mlcLookup_ $path $pat" > /dev/stderr
	cached="$(mlcLookupCache_ $pat)"
	[ -z "$cached" ] || {
		echo "found cache: $cached" > /dev/stderr
		date=$(echo "$cached" | cut -d\  -f 2)
		if [ $date -lt $(stat -c '%Y' "$path") ] ; then
			echo "evicting" > /dev/stderr
			mlcEvict_ "$path" "$pat"
			cached="$(mlcLookupCache_ $pat)"
		fi
	}
	[ -z "$cached" ] && {
		mlcEnter_ "$path" "$pat"
		cached="$(mlcLookupCache_ $pat)"
	}
	echo "cache line: $cached" > /dev/stderr
	echo "$cached" | cut -d\  -f 3
}

function mlcLookup() {
	[ -e ~/.mlc ] || touch ~/.mlc
	path="$@"
	mlcLookup_ "$path" "$(mlcPath2Key_ $path)"
}
